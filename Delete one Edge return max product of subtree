const int maxn = 100009;
vector < int > adj[maxn];

const int m = 1e9 + 7;
long long s;
long long maxe;

int dfs(int node,int par,vector<int> &A)   {
    long long sum = A[node - 1];
    
    for(int child : adj[node])   {
        if(child == par) continue;
        
        sum += dfs(child,node,A);
    } 
    long long res = ((sum ) * ((s - sum)));
    maxe = max(maxe,res);
    
    return sum;
}

int Solution::deleteEdge(vector<int> &A, vector<vector<int> > &B) {
    
    s = 0;
    maxe = 0;
    
    for(int i = 0;i<=A.size();i++)  {
        adj[i].clear();
    }
    
    for(int a : A)  {
        s +=a;
    }
    
    for(auto &e : B) {
        adj[e[0]].push_back(e[1]);
        adj[e[1]].push_back(e[0]);
    }
    
    dfs(1,0,A);
    
    return maxe%m;
}
